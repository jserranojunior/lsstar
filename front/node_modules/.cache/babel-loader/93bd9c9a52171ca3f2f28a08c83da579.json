{"remainingRequest":"/opt/lampp/htdocs/intellect/front/node_modules/thread-loader/dist/cjs.js!/opt/lampp/htdocs/intellect/front/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/intellect/front/node_modules/eslint-loader/index.js??ref--13-0!/opt/lampp/htdocs/intellect/front/src/modules/financeiro/vuex/FinanceiroActions.js","dependencies":[{"path":"/opt/lampp/htdocs/intellect/front/src/modules/financeiro/vuex/FinanceiroActions.js","mtime":1582860258894},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/cache-loader/dist/cjs.js","mtime":1578848123391},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/thread-loader/dist/cjs.js","mtime":1576704845283},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/babel-loader/lib/index.js","mtime":1576704838626},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/eslint-loader/index.js","mtime":1576704844214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvb3B0L2xhbXBwL2h0ZG9jcy9pbnRlbGxlY3QvZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7CmV4cG9ydCB2YXIgQWN0aW9uQWRkQ29udGFzQVBhZ2FyID0gZnVuY3Rpb24gQWN0aW9uQWRkQ29udGFzQVBhZ2FyKF9yZWYsIGRhZG9zKSB7CiAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICByZXR1cm4gbmV3IFByb21pc2UoCiAgLyojX19QVVJFX18qLwogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShyZXNvbHZlLCByZWplY3QpIHsKICAgICAgdmFyIG9wdGlvbnMsIGxpbms7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBvcHRpb25zID0gewogICAgICAgICAgICAgICAgYmFzZVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzMzMycsCiAgICAgICAgICAgICAgICB0aW1lb3V0OiAxMDAwLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHN0b3JlLnN0YXRlLkF1dGgudG9rZW4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIGxpbmsgPSAnL2NvbnRhc2FwYWdhcic7CiAgICAgICAgICAgICAgYXhpb3MucG9zdChsaW5rLCBkYWRvcywgb3B0aW9ucykudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBkaXNwYXRjaCgnQWN0aW9uR2V0Q2F0ZWdvcmlhc0NvbnRhc0FQYWdhcicpOwogICAgICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IucmVzcG9uc2UpOwogICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyKSB7CiAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCkpOwp9OwpleHBvcnQgdmFyIEFjdGlvbkdldENhdGVnb3JpYXNDb250YXNBUGFnYXIgPSBmdW5jdGlvbiBBY3Rpb25HZXRDYXRlZ29yaWFzQ29udGFzQVBhZ2FyKF9yZWYzKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdCwKICAgICAgc3RhdGUgPSBfcmVmMy5zdGF0ZTsKICByZXR1cm4gbmV3IFByb21pc2UoCiAgLyojX19QVVJFX18qLwogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBvcHRpb25zLCBkYXRhU2VsZWNpb25hZGEsIGRhdGUsIG1vbnRoLCB5ZWFyLCBmb3JtYXR0ZXJNb250aCwgbGluazsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBvcHRpb25zID0gewogICAgICAgICAgICAgICAgYmFzZVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzMzMycsCiAgICAgICAgICAgICAgICB0aW1lb3V0OiAxMDAwLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHN0b3JlLnN0YXRlLkF1dGgudG9rZW4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICBpZiAoc3RhdGUuZGF0YVNlbGVjaW9uYWRhID09ICcnKSB7CiAgICAgICAgICAgICAgICBkYXRlID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAgIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTsKICAgICAgICAgICAgICAgIHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7CgogICAgICAgICAgICAgICAgaWYgKG1vbnRoIDwgMTApIHsKICAgICAgICAgICAgICAgICAgZm9ybWF0dGVyTW9udGggPSAnMCcgKyBtb250aDsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGZvcm1hdHRlck1vbnRoID0gbW9udGg7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgZGF0YVNlbGVjaW9uYWRhID0geWVhciArICctJyArIGZvcm1hdHRlck1vbnRoOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBkYXRhU2VsZWNpb25hZGEgPSBzdGF0ZS5kYXRhU2VsZWNpb25hZGE7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBsaW5rID0gJy9maW5hbmNlaXJvLycgKyBkYXRhU2VsZWNpb25hZGE7CiAgICAgICAgICAgICAgYXhpb3MuZ2V0KGxpbmssIG9wdGlvbnMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9DQVRFR09SSUFfQ09OVEFTJywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvci5yZXNwb25zZSk7CiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpOwoKICAgIHJldHVybiBmdW5jdGlvbiAoX3gzLCBfeDQpIHsKICAgICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn07CmV4cG9ydCB2YXIgQWN0aW9uU2V0RGF0YVNlbGVjaW9uYWRhID0gZnVuY3Rpb24gQWN0aW9uU2V0RGF0YVNlbGVjaW9uYWRhKF9yZWY1LCBkYXRhKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICByZXR1cm4gbmV3IFByb21pc2UoCiAgLyojX19QVVJFX18qLwogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmNiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMocmVzb2x2ZSkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCgnU0VUX0RBVEFfU0VMRUNJT05BREEnLCBkYXRhKTsKICAgICAgICAgICAgICByZXNvbHZlKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeDUpIHsKICAgICAgcmV0dXJuIF9yZWY2LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn07CmV4cG9ydCB2YXIgQWN0aW9uU2V0RWRpdGFyQ29udGFBUGFnYXIgPSBmdW5jdGlvbiBBY3Rpb25TZXRFZGl0YXJDb250YUFQYWdhcihfcmVmNywgZGF0YSkgewogIHZhciBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgcmV0dXJuIG5ldyBQcm9taXNlKAogIC8qI19fUFVSRV9fKi8KICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZjggPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgIC8qI19fUFVSRV9fKi8KICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KHJlc29sdmUpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQoJ1NFVF9FRElUQVJfQ09OVEFfQV9QQUdBUicsIGRhdGEpOwogICAgICAgICAgICAgIHJlc29sdmUoKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gKF94NikgewogICAgICByZXR1cm4gX3JlZjguYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfSgpKTsKfTs="},{"version":3,"sources":["/opt/lampp/htdocs/intellect/front/src/modules/financeiro/vuex/FinanceiroActions.js"],"names":["axios","store","ActionAddContasAPagar","dados","dispatch","Promise","resolve","reject","options","baseURL","timeout","headers","state","Auth","token","link","post","then","catch","error","console","log","response","ActionGetCategoriasContasAPagar","commit","dataSelecionada","date","Date","month","getMonth","year","getFullYear","formatterMonth","get","data","ActionSetDataSelecionada","ActionSetEditarContaAPagar"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport store from '@/store'\n\nexport const ActionAddContasAPagar = ({dispatch}, dados) => {\n  return new Promise(async (resolve, reject) => {     \n\n      const options = {\n\n          baseURL: 'http://localhost:3333',\n          timeout: 1000,\n          headers: {\n            'Authorization': 'Bearer ' + store.state.Auth.token\n          }\n        }     \n        \n        let link = '/contasapagar'\n\n        axios.post(link, dados, options)\n            .then(function () {\n              \n              dispatch('ActionGetCategoriasContasAPagar')\n              resolve() \n\n            })\n            .catch(function (error) {\n              console.log(error)\n              console.log(error.response); \n              reject(error)  \n            })  \n\n          })\n        }\n\n\n  export const ActionGetCategoriasContasAPagar = ({commit, state}) => {\n    return new Promise(async (resolve, reject) => {     \n\n        const options = {\n            baseURL: 'http://localhost:3333',\n            timeout: 1000,\n            headers: {\n              'Authorization': 'Bearer ' + store.state.Auth.token\n            }\n          }          \n          \n          let dataSelecionada\n          if(state.dataSelecionada == ''){\n            var date = new Date()     \n            var month = date.getMonth() + 1;\n            var year = date.getFullYear();                    \n            var formatterMonth;\t\n            if (month < 10) {\n                formatterMonth = '0'+ month;\n            } else {\n                formatterMonth = month;\n            }        \n            dataSelecionada =  year +'-'+ formatterMonth ;            \n          }else{\n            dataSelecionada = state.dataSelecionada\n          }\n\n\n          let link = '/financeiro/' + dataSelecionada\n\n\n    axios.get(link, options)\n    .then(function (response) {                \n        commit('SET_CATEGORIA_CONTAS', response.data)      \n        resolve() \n    })\n    .catch(function (error) {\n        console.log(error)\n        console.log(error.response); \n        reject(error)           \n    })  \n\n    })\n  }\n\n  export const ActionSetDataSelecionada = ({commit}, data) => {\n    return new Promise(async (resolve) => {      \n      commit('SET_DATA_SELECIONADA', data)\n      resolve()\n    })\n  }\n\n  export const ActionSetEditarContaAPagar = ({commit}, data) => {\n    return new Promise(async (resolve) => {      \n      commit('SET_EDITAR_CONTA_A_PAGAR', data)\n      resolve()\n    })\n  }"]}]}