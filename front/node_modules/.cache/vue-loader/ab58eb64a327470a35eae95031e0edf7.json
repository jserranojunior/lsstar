{"remainingRequest":"/opt/lampp/htdocs/lsstar/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/lsstar/front/src/views/layouts/SideBar.vue?vue&type=template&id=b56b3d6e&","dependencies":[{"path":"/opt/lampp/htdocs/lsstar/front/src/views/layouts/SideBar.vue","mtime":1585329626884},{"path":"/opt/lampp/htdocs/lsstar/front/node_modules/cache-loader/dist/cjs.js","mtime":1578848123391},{"path":"/opt/lampp/htdocs/lsstar/front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1578848126235},{"path":"/opt/lampp/htdocs/lsstar/front/node_modules/cache-loader/dist/cjs.js","mtime":1578848123391},{"path":"/opt/lampp/htdocs/lsstar/front/node_modules/vue-loader/lib/index.js","mtime":1578848126235}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}